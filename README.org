#+TITLE: ob-go

* Introduction

  =ob-go= enables [[http://orgmode.org/worg/org-contrib/babel/intro.html][Org-Babel]] support for evaluating [[http://golang.org/][go]] code. this repo forked from [[https://github.com/pope/ob-go][https://github.com/pope/ob-go]].

*  Install
** Source
   clone this repo and load =ob-go= package: 

 #+BEGIN_SRC elisp
 (require ob-go)
 #+END_SRC
** TODO Melpa
** Enable
 add =ob-go= into =org-babel-do-load-languages= list after load =org=.
 #+BEGIN_SRC elisp
   (after-load 'org
     (org-babel-do-load-languages
      'org-babel-load-languages
      `(
        (emacs-lisp . t)
        (lisp . t)
        (go . t))))
 #+END_SRC
* Examples

  if you familiar with [[https://play.golang.org/][The Go Playgroud]], this one would much easiear for you.
** Basic
#+BEGIN_SRC go exports 
package main

import "fmt"

func main() {
    fmt.Println("你好, ob-go!")
}

#+END_SRC

#+RESULTS:
: 你好, ob-go!

* Language Specific Header Arguments

  In addition to the normal header arguments for Babel, below are some some
  headers specific to go.

  - =:args= :: Command line arguments to pass to the executable compiled from
               the code block. To pass more than one argument, use a list.
  - =:flags= :: Flags to pass to the =go run= command. These are the flags
                  that you would pass to =go build=.

* Running tests

  Tests can be executed by /make test/ or invoking emacs directly with
  the command-line below:

#+BEGIN_SRC shell
# For Emacs earlier than 24, add -L /path/to/ert
emacs -Q --batch \
	-L . \
	-l ob-go.el \
	-l test-ob-go.el \
	--eval "(progn \
              (setq org-confirm-babel-evaluate nil) \
              (org-babel-do-load-languages \
                'org-babel-load-languages '((emacs-lisp . t) \
                                            (sh . t) \
                                            (org . t) \
                                            (go . t))))" \
    -f ob-go-test-runall
#+END_SRC
